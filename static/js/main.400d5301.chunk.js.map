{"version":3,"sources":["Component/Navbar.js","Component/Footer.js","Component/Button.js","Component/Questions.js","Component/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","count","className","href","type","onChange","document","body","style","background","color","id","htmlFor","Footer","props","marks","toQ","Button","useState","btncol","setbtncol","onMouseEnter","event","target","backgroundColor","preventDefault","onMouseLeave","onClick","valuebtn","innerText","val","Questions","reply","setreply","checkval","cor","markscal","console","log","listItems","ans","map","myList","index","Qid","quest","Quiz","Marks","setMarks","myLists","ques","MarksCalculator","childValue","question","answers","correct","questionId","length","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.400d5301.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    let count = 0;\r\n    const clickhandler = () => {\r\n        if (count % 2 !== 0) {\r\n            document.body.style.background = \"#fff\";\r\n            document.body.style.color = \"#000000\";\r\n        } else {\r\n            document.body.style.background = \"#000000\";\r\n            document.body.style.color = \"#ffffff\";\r\n        }\r\n        count++;\r\n    }\r\n    let hrefLink = '#';\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n\r\n                <a className=\"navbar-brand\" href={hrefLink}>Quiz App</a>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href={hrefLink}>Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href={hrefLink}>Result</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"custom-control custom-switch float-lg-right\">\r\n                    <input type=\"checkbox\" onChange={clickhandler} className=\"custom-control-input\" id=\"switch1\" />\r\n                    <label className=\"custom-control-label\" htmlFor=\"switch1\">Toggle me</label>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h2>Score {props.marks} out of {props.toQ}</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Button(props) {\r\n    const [btncol, setbtncol] = useState('')\r\n    const logic = (event) => {\r\n        props.valuebtn(event.target.innerText)\r\n       \r\n        event.preventDefault();\r\n    }\r\n    const onHoverIn = (event) => {\r\n        setbtncol(\"#6c757d\")\r\n        event.target.style.backgroundColor = btncol;\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onHoverout = (event) => {\r\n        setbtncol(\"#ffc107\")\r\n        event.target.style.backgroundColor = btncol;\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <button className=\" m-2 btn btn-secondary\" onMouseEnter={onHoverIn} onMouseLeave={onHoverout} onClick={logic}  >\r\n            {props.val}\r\n        </button>\r\n    )\r\n}\r\n","import React ,{useState} from 'react'\r\nimport Button from './Button'\r\n\r\nexport default function Questions(props) {\r\n    const [reply, setreply] = useState(null)\r\n    const checkval= (val) => {\r\n        if (props.cor === val) {\r\n            setreply(true);\r\n            props.markscal(reply);\r\n        }\r\n        \r\n        console.log(props.cor,val,reply);\r\n    }\r\n    const myLists = props.ans;\r\n    const listItems = myLists.map((myList,index) =>\r\n        <Button key={index} valuebtn={checkval} val={myList} cor={props.cor}/>\r\n        );\r\n    return (\r\n        <div className=\"card bg-primary text-white my-3 py-3 px-5\">\r\n            <p>Q.{props.Qid}  {props.quest}</p>\r\n            <div className=\"buttons\">\r\n                {listItems}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Footer from './Footer'\r\nimport Questions from './Questions'\r\n\r\n\r\nexport default function Quiz(props) {\r\n    const [Marks, setMarks] = useState(0);\r\n    const myLists = props.ques;\r\n\r\n    const MarksCalculator = (childValue) => {\r\n        if (childValue===null) {\r\n            setMarks(Marks+1)\r\n        }\r\n\r\n    }\r\n\r\n    const listItems = myLists.map((myList,index) =>\r\n        <Questions key={index} markscal={MarksCalculator} quest={myList.question} ans={myList.answers} cor={myList.correct} Qid={myList.questionId}  />\r\n    );\r\n    return (\r\n        <div className=\"card m-5 p-5\">\r\n            {listItems}\r\n            <Footer toQ={listItems.length} marks={Marks} />\r\n        </div>\r\n    )\r\n};\r\n","import Navbar from \"./Component/Navbar\";\nimport Quiz from \"./Component/Quiz\";\n\n\nfunction App() {\n\n  const quesBank = [\n    {\n      question:\n        \"What does HTML stand for? ?\",\n      answers: [\"HyperText Markup Language\", \"HyperType Markup Language\", \"HyperText Markup List\", \"HyperText type Markup Language\"],\n      correct: \"HyperText Markup Language\",\n      questionId: \"1\"\n    },\n    {\n      question:\n        \"Who is making the Web standards ?\",\n      answers: [\"Mozilla Mdn\", \"Chrome\", \"Opera\", \"Brave\"],\n      correct: \"Mozilla Mdn\",\n      questionId: \"2\"\n    },\n    {\n      question:\n        \"Choose the correct HTML element for the largest heading: ?\",\n      answers: [\"h2\", \"html\", \"head\", \"h1\"],\n      correct: \"h1\",\n      questionId: \"3\"\n    },\n    {\n      question:\n        \"What is the correct HTML element for inserting a line break ?\",\n      answers: [\"Br\", \"Hr\", \"P\", \"Body\"],\n      correct: \"Br\",\n      questionId: \"4\"\n    },\n    {\n      question:\n        \"Choose the correct HTML element to define important text \",\n      answers: [\"Bold\", \"impotant\", \"strong\", \"Italic\"],\n      correct: \"strong\",\n      questionId: \"5\"\n    },\n    \n    \n  ];\n\n  return (\n    <div  className=\"App \" >\n      <Navbar/>\n      <h1 style={{textAlign:\"center\"}} className=\"card-body\" >Simple Quiz Application</h1>\n      <Quiz  ques={quesBank} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}